@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model MEVIO.Models.Task

<link type="text/css" rel="stylesheet" href="/css/TaskStyle.css">
<link type="text/css" rel="stylesheet" href="/css/MyTask.css">

<style>
    .head-button {
        font-size: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.5rem;
        cursor: pointer;
        transition: 0.1s;
        border-radius: 14px;
        width: 10rem;
        background-color: #52A7E4;
        color: #111624;
    }

    .head-button2 {
        font-size: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0.5rem;
        cursor: pointer;
        transition: 0.1s;
        border-radius: 14px;
        width: 10rem;
    }

        .head-button2 a {
            text-decoration: none;
            color: #52A7E4;
        }

        .head-button2:hover {
            background-color: #52A7E4;
            color: #111624;
        }
    /*мои стили*/
    .podvodka {
        width: 100%;
        height: 40%;
        margin-top: 1rem;
        resize: none;
        background-color: #111624;
        border: 1px solid #52A7E4;
        border-radius: 20px;
        padding: 1rem;
        font-size: 1.5rem;
        color: #52A7E4;
    }

    .divStrockZap2 {
        width: 80%;
        height: 1.875rem;
        font-family: 'Inter';
        font-style: normal;
        font-weight: 700;
        line-height: 30px;
        color: #BAE2FF;
        padding-left: 0.7rem;
        /* border: 1px solid #52A7E4;
                                 border-radius: 15px;*/
        border: none;
        background: #111624;
        font-size: 1.5rem;
        outline: none;
    }

    /* .check_list_div {
                display: flex;
                flex-direction: row;
                width: 90%;
                height: 40%;
                margin-top: 0.5rem;
                margin-left: 1rem;
                resize: none;
                background-color: #111624;
                border: 1px solid #52A7E4;
                border-radius: 15px;
                padding: 0.3rem;
                font-size: 1.5rem;
                color: #52A7E4;
            }*/

    .check_list_div {
        display: grid;
        grid-template-columns: 0.3fr 1fr 3fr;
    }

    #parent, #parentClient, #userParent {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
    }

    .radiob_mulaz {
        width: 1.5rem;
        height: 1.5rem;
        margin-left: 1.5rem;
        resize: none;
        background-color: #A0D7FF;
        border-radius: 25px;
        color: #52A7E4;
        margin-top: 0.5rem;
    }

    .check_list_name {
        height: 1.5rem;
        font-family: 'Inter';
        font-style: normal;
        font-weight: 700;
        line-height: 30px;
        color: #BAE2FF;
        padding-left: 0.7rem;
        border: 1px solid #52A7E4;
        border-radius: 15px;
        border: none;
        background: #111624;
        font-size: 1.5rem;
        /* outline:none;*/
        margin-left: 0.5rem;
        margin-top: 0.5rem;
        margin: 1rem;
    }

    .check_list_name_lable {
        width: 100%;
        height: 2.5rem;
        color: #BAE2FF;
        font-size: 1.5rem;
        margin: 0.3rem;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .div_button {
        display: flex;
        flex-direction: row;
        border: 1px solid #52A7E4;
        width: 35%;
        height: 2rem;
        margin-left: 5rem;
        margin-top: 1rem;
        padding: 0.5rem;
    }

    .buttonWithinPerson {
        color: #A0D7FF;
        width: 50%;
        height: 1rem;
        background-color: none;
        font-size: 1rem;
        margin-left: 0.8rem;
        cursor: pointer;
    }

    .buttonWithinPerson2 {
        color: #A0D7FF;
        width: 50%;
        height: 1rem;
        font-size: 1rem;
        margin-left: 0.8rem;
        cursor: pointer;
    }

    .button_botom_div_con {
        display: flex;
        flex-direction: row;
        width: 90%;
        height: 40%;
        margin-top: 0.5rem;
        margin-left: 1rem;
        padding: 0.3rem;
        font-size: 1.5rem;
    }

    .add_check {
        color: #A0D7FF;
        cursor: pointer;
    }

    .delete_check {
        color: #DB1A1A;
        margin-left: 4rem;
        cursor: pointer;
    }



    /*box for Watching & Responsible Persons*/
    .mainBox, .mainBoxPesponsible, .mainBoxNewUser {
        position: absolute;
        display: none;
        z-index: 1;
        top: 22rem;
    }


    .textCenter {
        margin-top: auto;
        margin-bottom: auto;
    }

    .styleP {
        width: 5rem;
        height: 2.5rem;
        font-size: 1.3rem;
        font-family: "Inter";
        font-style: normal;
        font-weight: 400;
        line-height: 2.5rem;
        white-space: nowrap;
        color: #52a7e4;
        margin-right: 1rem;
    }
    /*/////////////////////////////////////*window*/
    .parent, .parentClient, .userParent {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        padding: 0.5rem;
    }

    .membersWindow {
        width: 7.6rem;
        height: 2.1rem;
        /* left: 44.5rem;
                                     top: 36.8rem;*/
        border: none;
        cursor: pointer;
        background: #52a7e4;
        border-radius: 15px 15px 0px 0px;
    }

        .membersWindow p {
            width: 6.5rem;
            height: 24px;
            left: 45rem;
            top: 37rem;
            text-align: end;
            font-family: "Inter";
            font-style: normal;
            font-weight: 400;
            font-size: 1.4rem;
            line-height: 1.7rem;
            color: #111624;
        }

    .box2, .box2Res, .box2Users {
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        width: 29rem;
        height: 17.5rem;
        left: 20rem;
        top: 36rem;
        background: #111624;
        border: 1px solid #52a7e4;
        position: fixed;
    }

    .first {
        display: flex;
        justify-items: center;
        align-items: center;
        height: 3rem;
        left: 44.86rem;
        width: 27.4rem;
        margin-left: 0.428rem;
        margin-right: 1.214rem;
        margin-top: 0.642rem;
        background: #111624;
        border: 1px solid #52a7e4;
    }

    .block {
        display: flex;
        justify-items: center;
        align-items: center;
        width: 11.4rem;
        height: 2.1rem;
        left: 45.64rem;
        top: 39.85rem;
        margin-left: 0.8rem;
        background: #a0d7ff;
    }

        .block img {
            width: 1.6rem;
            height: 1.6rem;
            left: 647px;
            margin-left: 0.5rem;
            top: 562px;
            border-radius: 50%;
            border: 1px solid #52a7e4;
        }

        .block p {
            width: 8.35rem;
            height: 1.714rem;
            white-space: nowrap;
            margin-left: 0.9rem;
            font-family: "Inter";
            font-style: normal;
            font-weight: 400;
            font-size: 20px;
            line-height: 24px;
            color: #111624;
        }

    .inpSearch {
        width: 11rem;
        height: 1.7rem;
        margin-left: 4rem;
        font-family: "Inter";
        font-style: normal;
        font-weight: 400;
        font-size: 20px;
        line-height: 24px;
        background-color: #111624;
        color: #52a7e4;
        border: none;
    }

    input:focus {
        outline: none;
    }

    .secondBox, .secondBoxClient {
        display: flex;
        flex-direction: column;
        justify-content: center;
        width: 29rem;
        margin-top: 1rem;
        overflow: scroll;
        /*для вертикального*/
        overflow-x: hidden; /*для горизонтального*/
    }

    ::-webkit-scrollbar {
        width: 20px;
    }

    ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 5px grey;
        border-radius: 10px;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background-color: #52a7e4;
        border-radius: 10px;
    }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(180deg, #00c6fb, #005bea);
        }



    .inBox, .inBoxClient, .inBoxUsers {
        display: flex;
        justify-items: center;
        align-items: center;
        height: 2.5rem;
        left: 45.57rem;
        margin-top: 1rem;
        width: 27.51rem;
        margin-left: 0.428rem;
        margin-right: 1.214rem;
        white-space:nowrap;
    }

        .inBox:hover, .inBoxClient:hover, .inBoxUsers:hover {
            background-color: #52a7e4;
        }

        .inBox p:hover, .inBoxClient p:hover, .inBoxUsers p:hover {
            color: #111624;
        }

        .inBox img, .inBoxClient img, .inBoxUsers img{
            width: 2rem;
            height: 2rem;
            left: 46rem;
            top: 43.14rem;
            border-radius: 50%;
            border: 1px solid #a0d7ff;
            margin-left: 0.7rem;
        }


        .inBox p, .inBoxClient p, .inBoxUsers p {
            width: 7.857rem;
            height: 18px;
            left: 674px;
            top: 603px;
            margin-left: 3rem;
            font-family: "Inter";
            font-style: normal;
            font-weight: 400;
            font-size: 1.2rem;
            line-height: 18px;
        }

    .bird {
        width: 15.5px;
        height: 15px;
        top: 650px;
        color: #111624;
        margin: 0.57rem 0.71rem 1.2rem 12rem;
    }


    .close {
        color: #a0d7ff;
        cursor: pointer;
        margin-left: 1rem;
    }

    .eyes {
        background: #111624;
        color: #52a7e4;
        font-size: 1.25rem;
        line-height: 1.5rem;
        transform: (-50%, -50%);
        background: url("/img/eye.jpg") no-repeat center;
        background-size: 20px;
        background-repeat: no-repeat;
        background-position: 95%;
        padding: 1rem;
        width: 2rem;
        margin-right: 0.8rem;
    }

    /*  add date & time*/


    input[type="checkbox"] {
        margin-top: auto;
        margin-bottom: auto;
    }

    .checkbox-style {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        width: 20px;
        height: 20px;
        border: 1px solid #52a7e3;
        /* margin-top: auto;
                        margin-bottom: auto;*/
        border-radius: 3px;
        outline: none;
        cursor: pointer;
        margin-left: 1rem;
    }

        .checkbox-style:checked {
            background-color: #1e90ff;
            border: 1px solid #1e90ff;
        }

    .mainDiv {
        width: 90%;
        background-color: #52a7e4;
        padding-bottom: 1rem;
        margin: auto;
    }


    input[type="date"], input[type="datetime-local"] {
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 0.313rem 0.813rem;
        gap: 0.438rem;
        width: 15.625rem; /*changed for new datetime from 10.625*/
        height: 2.313rem;
        left: 0.5rem;
        top: 9.313rem;
        background: #111624;
        border: 1px solid #52a7e4;
        border-radius: 0.625rem;
        color: #52a7e4;
        font-family: "Inter";
        font-style: normal;
        font-weight: 400;
        font-size: 1.25rem;
        line-height: 1.5rem;
        transform: (-50%, -50%);
        background: url("/img/free-icon-calendar-747824.png") no-repeat center;
        background-size: 20px;
        background-repeat: no-repeat;
        background-position: 95%;
        padding: 0.313rem;
        margin: 0.5rem;
    }


    .time-span-row {
        display: grid;
        grid-template-columns: repeat(16, 1fr);
        width: 100%;
    }

    .superstyle::-webkit-inner-spin-button,
    .superstyle::-webkit-calendar-picker-indicator {
        display: none;
        -webkit-appearance: none;
    }


    input[type="datetime-local"]::-webkit-calendar-picker-indicator {
        position: relative;
        z-index: 1;
        opacity: 0;
    }


    input[type="time"] {
        box-sizing: border-box;
        display: flex;
        height: 2.313rem;
        width: 5.2rem;
        flex-direction: row;
        align-items: center;
        padding-left: 0.6rem;
        padding-right: 0.6rem;
        padding-top: 0.2rem;
        padding-bottom: 0.375rem;
        margin-left: 0.5rem;
        background: #111624;
        border: 1px solid #52a7e4;
        border-radius: 0.625rem;
        color: #52a7e4;
        font-family: "Inter";
        font-style: normal;
        font-size: 1rem;
    }

    .divDate {
        display: flex;
        justify-content: center;
        grid-column-start: 2;
        grid-row-start: 2;
    }


    .response-block {
        margin-top: 1.5rem;
        width: 80%;
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-column-gap: 2rem;
        margin-bottom: 1rem;
    }

    .response-div {
        display: flex;
        align-items: center;
        justify-content: start;
        flex-wrap: nowrap;
    }

    .user-block {
        padding: 0.3rem;
        font-size: 1.5rem;
        background-color: #A0D7FF;
        color: #1B2B36;
        cursor: pointer;
        margin: 0.5rem;
    }
</style>
<body id="body">

    <div class="container">
        <a style="color:aqua" asp-controller="Home" asp-action="EventMini"> EventMini </a>
        <br />
        <div class="head-flex">
            <div class="head-button">Завдання</div>
            <div class="head-button2"> <a href="/Event/Index">Події</a></div>
            <div class="head-button2"><a href="/Meassure/Index">Заходи</a></div>
        </div>
        <form asp-controller="Task" asp-action="AddTask" method="POST" id="taskForm">
            <div>
                <input type="text" asp-for="@Model.TaskName" on class="head-input" placeholder="Ввести назву завдання">
            </div>

            <div>
                <textarea class="textarea" asp-for="@Model.Description" placeholder="Опис"></textarea>
            </div>

            <div class="check-list-flex">
                <div class="flex">
                    <input type="file" name="file" id="file" hidden>
                    <label class="label" for="file"><img src="img/free-icon-paperclip-87745612.png" alt=""></label>
                    <label for="file" class="label">Файл</label>
                </div>

                <div>
                    <label for="" class="label check-list">+ Чек лист</label>
                </div>

            </div>

            <div class="podvodka">
                <input class="divStrockZap2" value="чек лист" />
                <br />
                <hr class="hr">
                <div class="ollChek">
                    <div class="div_button">
                        <label class="buttonWithinPerson" id="WatchingPerson">+ спостерiгач</label>

                        <div class="mainBox" @*style="display: none"*@>

                            <div class="box2">

                                <div class="secondBox">

                                    @foreach (var itemUsers in ViewBag.Users)
                                    {
                                        <div class="inBox">
                                            <img src="~/Imeg1/@itemUsers.UserName/@itemUsers.PathImgAVA" />
                                            <p class="clientName" @*name="userName"*@>@itemUsers.UserName</p>
                                            <span class="clientId" hidden>@itemUsers.Id</span>
                                            <div class="bird">&#10004;</div>
                                        </div>
                                    }

                                </div>

                            </div>
                        </div>
                        <label class="buttonWithinPerson" id="ResPerson">+ співвиконавець</label>

                        <div class="mainBoxPesponsible" @*style="display: none"*@>

                            <div class="box2Res">

                                <div class="secondBoxClient">

                                    @foreach (var itemUsers in ViewBag.Users)
                                    {
                                        <div class="inBoxClient">
                                            <img src="~/Imeg1/@itemUsers.UserName/@itemUsers.PathImgAVA" />
                                            <p class="resName" @*name="userName"*@>@itemUsers.UserName</p>
                                            <span class="resId" hidden>@itemUsers.Id</span>
                                            <div class="bird">&#10004;</div>
                                        </div>
                                    }

                                </div>

                            </div>
                        </div>


                    </div>
                    <div class="check_list_div">

                        <div class="radiob_mulaz"></div>
                        <input type="text" class="check_list_name" />
                        <div id="parent">
                            @* <label class="check_list_name_lable">Max Voloshov</label>
                            <label class="check_list_name_lable">Max Voloshov</label>
                            <label class="check_list_name_lable">Max Voloshov</label>
                            <label class="check_list_name_lable">Max Voloshov</label>
                            <label class="check_list_name_lable">Max Voloshov</label>
                            <label class="check_list_name_lable">Max Voloshov</label>*@
                        </div>

                    </div>
                </div>
                <div id="addCheck">
                </div>
                <div class="button_botom_div_con">
                    <label id="butonaddcheck" class="add_check">+ Добавить пункт</label>
                    <label onclick="deleteCheckList()" class="delete_check">+ Удалить чек лист</label>
                </div>
            </div>




            @*<div class="podvodka">
            <input class="divStrockZap2" value="чек лист" />
            <br />
            <hr class="hr">
            <div class="ollChek">
            <div class="div_button">
            <label class="buttonWithinPerson" id="WatchingPerson">+ спостерiгач</label>

            <div class="mainBox" >

            <div class="box2">

            <div class="secondBox">

            @foreach (var itemUsers in ViewBag.Users)
            {
            <div class="inBox">
            <img src="~/Imeg1/@itemUsers.UserName/@itemUsers.PathImgAVA" />
            <p class="clientName" name="userName">@itemUsers.UserName</p>
            <span class="watchId" hidden>@itemUsers.Id</span>
            <div class="bird">&#10004;</div>
            </div>
            }

            </div>

            </div>
            </div>
            <label class="buttonWithinPerson" id="ResPerson">+ співвиконавець</label>

            <div class="mainBoxPesponsible">

            <div class="box2Res">

            <div class="secondBoxClient">

            @foreach (var itemUsers in ViewBag.Users)
            {
            <div class="inBoxClient">
            <img src="~/Imeg1/@itemUsers.UserName/@itemUsers.PathImgAVA" />
            <p class="resName" name="userName">@itemUsers.UserName</p>
            <span class="respId" hidden>@itemUsers.Id</span>
            <div class="bird">&#10004;</div>
            </div>
            }

            </div>

            </div>
            </div>


            </div>
            <div class="check_list_div">

            <div class="radiob_mulaz"></div>

            <input type="text" class="check_list_name" name="underTask" placeholder="Введіть назву підзадачі"/>

            <div id="parent">

            </div>

            </div>
            </div>
            <div id="addCheck">
            </div>
            <div class="button_botom_div_con">
            <label id="butonaddcheck" class="add_check">+ Добавить пункт</label>
            <label onclick="deleteCheckList()" class="delete_check">+ Удалить чек лист</label>
            </div>
            </div>*@
            <div class="response-block">
                <div class="response-div">Відповідальний</div>
                <div class="response-div">
                   @* <div class="response-div">Постановник</div>*@
                    <div class="add-response-block">

                        <div id="userParent">
                            @*<div class="user-block">
                                
                            </div>*@
                        </div>

                        <div class="add-response-user" id="AddResp">
                            + Додати ще
                        </div>

                        <div class="mainBoxNewUser">

                            <div class="box2Users">

                                <div class="secondBox">

                                    @foreach (var itemUsers in ViewBag.Users)
                                    {
                                        <div class="inBoxUsers">
                                            <img src="~/Imeg1/@itemUsers.UserName/@itemUsers.PathImgAVA" />
                                            <p class="userName">@itemUsers.UserName</p>
                                            <span class="userId" hidden>@itemUsers.Id</span>
                                            <div class="bird">&#10004;</div>
                                        </div>
                                    }

                                </div>

                            </div>


                        </div>

                    </div>

                </div>
            </div>
            <hr class="hr">

            <div id="responseBlock" class="response-block">
                <div class="response-div">Крайній термін</div>

                @* add inputs for date & time*@
                <div class="response-div">
                    <input type="date" id="date1" name="dateField1" />
                    <input type="time" class="superstyle" id="time1" name="timeField1" />
                    <div class="ture"></div>
                    <input type="date" id="date2" name="dateField2" />
                    <input type="time" class="superstyle" id="time2" name="timeField2" />
                </div>
                @*<div id="planTerm" class="response-div">Планування термінів</div>*@
            </div>

            <hr class="hr">

            <div class="results-block">
                <div class="result">
                    Результати завдання
                </div>
                <div>
                    <input class="alert-checkbox checkbox-style" type="checkbox" name="" id="alertMe">
                    <label class="label-alert" for="alertMe">Обов'язковий звіт при завершенні завдання</label>
                </div>
            </div>

            <div class="submit-block">
                <button type="submit" class="form-button">Зберегти</button>
                <div class="form-button">Відмінити</div>
            </div>

        </form>
    </div>


    <script src="~/js/jquery-3.6.1.min.js" asp-append-version="true"></script>


    <script>

        //Iryna add watching Persons

        $('#WatchingPerson').click(function ()  //watching Persons
        {
            $(".mainBox").fadeToggle(100);

        });

        $('#ResPerson').click(function ()  //watching Persons
        {
            $(".mainBoxPesponsible").fadeToggle(100);

        });

        $('#AddResp').click(function ()  //user Persons
        {
            $(".mainBoxNewUser").fadeToggle(100);

        });

        //ADD Inner Users
        //<div id="parent" >
        //    <div class="user-block" >
        //        W1sh
        //        < /div>
        //        < /div>

        $('.inBoxUsers').click(function (e) {

            const UserId=$(this).find(".userId").text();
            const userName = $(this).find('.userName').text();

            
                var userParent = document.getElementById("userParent");
                var newUserBlock = document.createElement("div");
                newUserBlock.className = "user-block";
            newUserBlock.innerText = userName;
                userParent.appendChild(newUserBlock);



                const formClient = document.getElementById("taskForm");
            const inputUser = document.createElement("input");
            inputUser.hidden = true;
            inputUser.name = "userId";
            inputUser.setAttribute("value", UserId);
           

            formClient.appendChild(inputUser);



            $(".mainBoxNewUser").css("display", "none");// закриваємо блок з users

            $(this).hide();

        });



        //ADD WatchingPerson
        $('.inBox').click(function (e) {
            //const imgSrcClient = $(this).find('img').attr('src');

            const watchIdd = $(this).find(".watchId").text();
            const clientName = $(this).find('.clientName').text();

            console.log(watchIdd);
            console.log(clientName);


            //All client on this Event
            const listClient = document.querySelectorAll(".parent");
            console.log(listClient);

            const formClient = document.getElementById("taskForm");
            const inputClient = document.createElement("input");
            inputClient.hidden = true;
            inputClient.name = "watchIdd";
            inputClient.setAttribute("value", watchIdd);
            console.log("Watching person")
            formClient.appendChild(inputClient);


            //Create lables with Watching Personr
            const parentClient = document.getElementById("parent");

            const diveyes = document.createElement("div");
            diveyes.className = "eyes";


            const labelWatchPersons = document.createElement("label");
            labelWatchPersons.className = "check_list_name_lable";
            labelWatchPersons.innerText = clientName;

            //Create close button
            const divClose = document.createElement("div");
            divClose.className = "close";
            divClose.innerHTML = "&#10006;";


            labelWatchPersons.insertBefore(diveyes, labelWatchPersons.firstChild);
            labelWatchPersons.appendChild(divClose);
            parentClient.appendChild(labelWatchPersons);


            // Добавить обработчик события "click" на элемент "divClose"
            labelWatchPersons.addEventListener("click", function () {
                parentClient.removeChild(labelWatchPersons);

            });


            $(".mainBox").css("display", "none");// закриваємо блок з users

            $(this).hide();
        });



        //ADD Resposible
        $('.inBoxClient').click(function (e) {
            //const imgSrcClient = $(this).find('img').attr('src');
            const respIdd = $(this).find(".respId").text();
            const clientName = $(this).find('.resName').text();

            console.log(respIdd);
            console.log(clientName);


            //All client on this Event
            const listClient = document.querySelectorAll(".parent");
            console.log(listClient);

            const formClient = document.getElementById("taskForm");
            const inputClient = document.createElement("input");
            inputClient.hidden = true;
            inputClient.name = "respIdd";
            inputClient.setAttribute("value", respIdd);
            console.log("Resp persons");
            formClient.appendChild(inputClient);


            //Create lables with Wathing Personr
            const parentClient = document.getElementById("parent");

            const labelWatchPersons = document.createElement("label");
            labelWatchPersons.className = "check_list_name_lable";
            labelWatchPersons.innerText = clientName;

            //Create close button
            const divClose = document.createElement("div");
            divClose.className = "close";
            divClose.innerHTML = "&#10006;";



            labelWatchPersons.appendChild(divClose);
            parentClient.appendChild(labelWatchPersons);


            // Добавить обработчик события "click" на элемент "divClose"
            labelWatchPersons.addEventListener("click", function () {
                parentClient.removeChild(labelWatchPersons);

            });


            $(".mainBoxPesponsible").css("display", "none");// закриваємо блок з users

            $(this).hide();
        });


        ///////////////////////////////////////////////////////

        //var dob = document.getElementById("responseBlock")
        //document.getElementById("planTerm").addEventListener("click", function () {
        //    var input = document.createElement("input");
        //    input.type = "date";
        //    input.classList = "response-div";
        //    dob.appendChild(input);
        //});

        console.log("DONE!!")

        //мой скрипт
        //створення addCheck
        const buttonAddCheck = document.querySelector('#butonaddcheck');
        const addCheck = document.querySelector('#addCheck');

        buttonAddCheck.addEventListener('click', function () {


            // Створення нових елементів
            const ollChek = document.createElement('div');
            ollChek.classList.add('ollChek');

            const newdiv_button = document.createElement('div');
            newdiv_button.classList.add('div_button');

            const newbuttonWithinPerson = document.createElement('label');
            newbuttonWithinPerson.classList.add('buttonWithinPerson');
            newbuttonWithinPerson.textContent = '+ спостерiгач';

            const newbuttonWithinPerson2 = document.createElement('label');
            newbuttonWithinPerson2.classList.add('buttonWithinPerson2');
            newbuttonWithinPerson2.textContent = '+ співвиконавець';



            const newCheckList = document.createElement('div');
            newCheckList.classList.add('check_list_div');



            const newRadio = document.createElement('div');
            newRadio.classList.add('radiob_mulaz');

            const newInput = document.createElement('input');
            newInput.type = 'text';
            newInput.classList.add('check_list_name');

            const newperent = document.createElement('div');
            newperent.classList.add('parent');


            const newLabel1 = document.createElement('label');
            newLabel1.classList.add('check_list_name_lable');
            newLabel1.textContent = 'Max Voloshov';

            const newLabel2 = document.createElement('label');
            newLabel2.classList.add('check_list_name_lable');
            newLabel2.textContent = 'Max Voloshov';

            const newLabel3 = document.createElement('label');
            newLabel3.classList.add('check_list_name_lable');
            newLabel3.textContent = 'Max Voloshov';

            const newLabel4 = document.createElement('label');
            newLabel4.classList.add('check_list_name_lable');
            newLabel4.textContent = 'Max Voloshov';

            // Додавання нових елементів до документу
            addCheck.appendChild(ollChek);
            ollChek.appendChild(newdiv_button);
            newdiv_button.appendChild(newbuttonWithinPerson);
            newdiv_button.appendChild(newbuttonWithinPerson2);

            ollChek.appendChild(newCheckList);
            newCheckList.appendChild(newRadio);
            newCheckList.appendChild(newInput);
            newCheckList.appendChild(newperent);

            ollChek.querySelectorAll('.radiob_mulaz').forEach(function (button) {
                // При кліку на елемент
                button.addEventListener('click', function () {
                    // const checkListDiv = button.closest('.check_list_div');
                    // Отримуємо поточний стан елемента з даних-атрибута
                    const isChecked = newCheckList.getAttribute('data-checked');

                    // Перевіряємо, чи елемент уже відзначений
                    if (isChecked === 'true') {
                        // Якщо він уже відзначений, то знімаємо закраску
                        newCheckList.style.backgroundColor = '';
                        // Оновлюємо стан елемента в даних-атрибуті
                        newCheckList.setAttribute('data-checked', 'false');
                    } else {
                        // Якщо елемент не відзначений, то закрашуємо його
                        newCheckList.style.backgroundColor = 'red';
                        // Оновлюємо стан елемента в даних-атрибуті
                        newCheckList.setAttribute('data-checked', 'true');
                    }
                });
            });
        });




        //const deleteBtn = document.querySelector('.delete_check');
        //deleteBtn.addEventListener('click', function () {
        //    const checkListDivs = document.querySelectorAll('.check_list_div');
        //    if (checkListDiv.style.backgroundColor === 'red') {
        //    checkListDivs.forEach(function (div) {
        //        div.remove(); // або div.parentNode.removeChild(div);
        //    });
        //    }
        //});
        //function deleteCheckList() {
        //    let checkListDiv = document.querySelector('.check_list_div');
        //    if (checkListDiv.style.backgroundColor === 'red') {
        //        checkListDiv.remove();
        //    }
        //}



        //function deleteCheckList() {
        //    const checkListDivs = document.querySelectorAll('.check_list_div');
        //    const ollCheck = document.querySelectorAll('.check_list_div');

        //    checkListDivs.forEach(checkListDiv => {
        //        if (checkListDiv.style.backgroundColor === 'red') {
        //            ollChek.remove();
        //        }
        //    });
        //}

        const radioButtons = document.querySelectorAll('.radiob_mulaz');

        // Додаємо обробник подій до кожного елемента
        radioButtons.forEach(function (button) {
            // При кліку на елемент
            button.addEventListener('click', function () {
                const checkListDiv = button.closest('.check_list_div');
                // Отримуємо поточний стан елемента з даних-атрибута
                const isChecked = checkListDiv.getAttribute('data-checked');

                // Перевіряємо, чи елемент уже відзначений
                if (isChecked === 'true') {
                    // Якщо він уже відзначений, то знімаємо закраску
                    checkListDiv.style.backgroundColor = '';
                    // Оновлюємо стан елемента в даних-атрибуті
                    checkListDiv.setAttribute('data-checked', 'false');
                } else {
                    // Якщо елемент не відзначений, то закрашуємо його
                    checkListDiv.style.backgroundColor = 'red';
                    // Оновлюємо стан елемента в даних-атрибуті
                    checkListDiv.setAttribute('data-checked', 'true');
                }
            });
        });


        function deleteCheckList() {
            const checkListDivs = document.querySelectorAll('.check_list_div');

            checkListDivs.forEach(checkListDiv => {
                if (checkListDiv.style.backgroundColor === 'red') {
                    const ollCheck = checkListDiv.closest('.ollChek');
                    if (ollCheck) {
                        ollCheck.remove();
                    }
                }
            });
        }
    </script>


</body>