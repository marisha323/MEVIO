@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    User? secondUser = ViewBag.secondUser;
}

@model User?

<link rel="stylesheet" href="~/css/style1.css" asp-append-version="true" />

<style>


    .chat-list-member {
        position: relative;
    }

    .chat-member-container {
        position: relative;
        left: 0;
        top: 100%;
        display: none;
        justify-content: space-evenly;
        align-items: center;
        width: 100%;
        z-index: 11;
        margin-top: 1rem;
        transition: 0.1s;
    }

    .chat-list-member:hover > .chat-member-container {
        display: flex;
    }


    .chat-members-img {
        width: 2rem;
        transition: 0.1s;
    }

        .chat-members-img:hover {
            transform: scale(1.1);
        }


    .two-users-div {
        margin-left:2rem;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        column-gap: 1rem;
        color:#52A7E4;
    }

    .one-user {
        width: 10rem;
        border-left: 1px solid #52A7E4;
        border-right: 1px solid #52A7E4;
        display:flex;
        justify-content:center;
        align-items:center;
        line-height:3rem;
        text-decoration:none;
        color:#52A7E4;
        transition:0.3s;
    }

    .one-user:hover{
        transform:scale(1.1);
        background-color:#52A7E4;
        color:#09122C;
    }
</style>


<div class="chat-container">



    <div class="chatList">
        <div id="user-name">
            <p>@Model.UserName (Ви)</p>
        </div>

        <hr class="hr2">

        <div class="flex-between">

            <div class="search-div">
                <img width="40px"
                     src="https://cdn.discordapp.com/attachments/684475244664193242/1072976650582638632/free-icon-search-4194718.png">
                <h1 class="search">Поиск</h1>

            </div>
            <div>
                <select class="combobox">
                    <option>Создать</option>
                </select>
            </div>
        </div>

        <div class="users">
            <hr class="hr2">

            <div class="user">

                <img class="img" src="https://cdn-images-1.medium.com/max/1200/1*NpUUls7kjn9JhO4ChjGV7w.png">
                <div class="user_info">
                    <p class="p">Name</p>
                    <p class="label">Последнее сообщение</p>
                </div>
                <div class="user-info-time">
                    <p style="margin-top: 5px;">27.05.2022</p>
                </div>

            </div>

            <hr class="hr2">




        </div>
    </div>



    <div class="right-chat-block">

        <div class="chat-name-div">
            @*@if (ViewBag.ChatUsers != null)*@
            @if (secondUser == null)
            {
                <div>
                    <p class="chat-name">@ViewBag.ChatName</p>
                    <p class="event-date">@ViewBag.Date</p>
                </div>

                <div class="chat-members">


                    <p class="show-members-button">Учасники</p>

                    <div class="chat-members-list hide">
                        @foreach (User user in ViewBag.ChatUsers)
                        {
                            <div class="chat-list-member">
                                @user.UserName
                                <div class="chat-member-container">
                                    @if (Model.Id != user.Id)
                                    {
                                        <a asp-controller="Chat" asp-action="GetUserChat" asp-route-userId="@user.Id">
                                            <img class="chat-members-img" src="~/img/chat_FILL0_wght400_GRAD0_opsz48.png" alt="Написати" />
                                        </a>
                                    }

                                    <a asp-controller="ZapTeacher" asp-action="Teacher" asp-route-id="@user.Id">
                                        <img class="chat-members-img" src="~/img/account_circle_FILL0_wght400_GRAD0_opsz48.png" alt="Перейти до профілю" />
                                    </a>
                                </div>
                            </div>
                        }

                    </div>




                </div>
            }


            @if (secondUser != null)
            {
                <div class="two-users-div">
                    <a class="one-user" asp-controller="ZapTeacher" asp-action="Teacher" asp-route-id="@Model.Id">
                        @Model.UserName (Ви)
                    </a>
                    <div>-</div>
                        <a class="one-user" asp-controller="ZapTeacher" asp-action="Teacher" asp-route-id="@secondUser.Id">
                            @secondUser.UserName
                        </a>
                </div>
            }

        </div>

        <div class="messages-div">

            @if (ViewBag.Messages != null)
            {
                foreach (ChatMessage message in ViewBag.Messages)
                {
                    @*Current User Message*@

                    if (Model.Id.Equals(message.UserId))
                    {
                        <div class="user-message">
                            <div class="userIcon right">
                                <img class="img" src="https://i.pinimg.com/236x/49/0d/61/490d614795d93dcdf536a34c0e2f6e78.jpg">
                                <div>
                                    <h2 class="user-name">Ви:</h2>
                                </div>
                                <div>
                                    <div class="sentTime">@message.TimeStamp.ToShortDateString()</div>
                                    <div class="sentTime">@message.TimeStamp.ToShortTimeString()</div>
                                </div>

                            </div>
                            <p class="message my-message">
                                @message.Text
                            </p>
                        </div>
                    }
                    else
                    {
                        User user = new User();
                        foreach (User item in ViewBag.ChatUsers)
                        {
                            if (item.Id.Equals(message.UserId))
                            {
                                user = item;
                            }
                        }

                        <div class="user-message">
                            <div class="userIcon">
                                <img class="img" src="https://i.pinimg.com/236x/49/0d/61/490d614795d93dcdf536a34c0e2f6e78.jpg">
                                <div>
                                    <h2 class="user-name">@user.UserName:</h2>
                                </div>
                                <div>
                                    <div class="sentTime">@message.TimeStamp.ToShortDateString()</div>
                                    <div class="sentTime">@message.TimeStamp.ToShortTimeString()</div>
                                </div>
                            </div>
                            <p class="message">
                                @message.Text
                            </p>
                        </div>
                    }




                }
            }



        </div>



        <div class="send_msg">
            <input hidden id="currentUserId" value=@Model.Id />
            <input hidden id="currentChatId" value=@ViewBag.ChatId />
            <input hidden id="chatType" value=@ViewBag.ChatType />
            <textarea id="messageInput" class="txt" autofocus></textarea>
            <img id="SendMessageButton" class="icon send"
                 src="https://cdn.discordapp.com/attachments/684475244664193242/1073126252501815367/free-icon-send-736110.png">
        </div>
    </div>



</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>

    const messagesDiv = document.querySelector(".messages-div");

    messagesDiv.scrollTop = messagesDiv.scrollHeight;



    $(".show-members-button").on("click", function (e) {

        $(e.target).toggleClass("active");

        $(".chat-members-list").toggleClass("hide");
    });


    const messageInput = document.querySelector("#messageInput");



    messageInput.addEventListener("keydown", function (e) {
        if (e.key === "Enter" && e.ctrlKey) {
            messageInput.value += "\n";
        }
        else if (e.key === "Enter") {
            e.preventDefault();

            SendMessageClick();
        }
    });


    document.getElementById("SendMessageButton").addEventListener("click", function (e) {
        SendMessageClick();
    });


    function SendMessageClick() {
        const text = messageInput.value;

        if (text == "" || text == null) {
            return;
        }

        console.log(text);

        SendMessage(text);

        messageInput.value = null;
        messageInput.selectionStart = 0;
        messageInput.selectionEnd = 0;
    }


    async function SendMessage(text) {

        const chatType = document.getElementById("chatType");
        const currentChatId = document.getElementById("currentChatId");
        const currentUserId = document.getElementById("currentUserId");

        const chatmessage = {
            UserId: currentUserId.value,
            Text: text
        };

        if (chatType.value === "EventChat") {
            chatmessage.EventChatId = currentChatId.value;
        }
        else if (chatType.value === "TaskChat") {
            chatmessage.TaskChatId = currentChatId.value;
        }
        else if (chatType.value === "MeasureChat") {
            chatmessage.MeasureChatId = currentChatId.value;
        }
        else {
            chatmessage.UserChatId = currentChatId.value;
        }

        const response = await fetch("/Chat/AddNewMessage", {
            method: "POST",
            headers: { "Accept": "application/json", "Content-Type": "application/json" },
            body: JSON.stringify(chatmessage)
        });

        if (response.ok) {
            const result = await response.json();

            console.log(result);

            AddNewMessageBlock(result.message, result.user);


        }
    }




    function AddNewMessageBlock(message, user) {



        //Current User Message

        //<div class="user-message">
        //        <div class="userIcon right">
        //            <img class="img" src="https://i.pinimg.com/236x/49/0d/61/490d614795d93dcdf536a34c0e2f6e78.jpg">
        //            <div>
        //                <h2 class="user-name">Admin</h2>
        //            </div>
        //            <div>
        //                <div class="sentTime">14.01.2023</div>
        //                <div class="sentTime">23:59:59</div>
        //            </div>

        //        </div>
        //        <p class="message my-message">Привет, Аня хоть извинилась? Привет, Аня хоть извинилась?</p>
        //    </div>



        //<div class="user-message">
        //        <div class="userIcon">
        //            <img class="img" src="https://i.pinimg.com/236x/49/0d/61/490d614795d93dcdf536a34c0e2f6e78.jpg">
        //            <div>
        //                <h2 class="user-name">Admin</h2>
        //            </div>
        //            <div>
        //                <div class="sentTime">14.01.2023</div>
        //                <div class="sentTime">23:59:59</div>

        //            </div>
        //        </div>
        //        <p class="message">Привет, Аня хоть извинилась? Привет, Аня хоть извинилась?</p>
        //    </div>



        const messagesDiv = document.querySelector(".messages-div");

        const userMessage = document.createElement("div");
        userMessage.className = "user-message";

        const userIcon = document.createElement("div");
        userIcon.className = "userIcon";





        const img = document.createElement("img");
        img.className = "img";
        img.setAttribute("src", "https://i.pinimg.com/236x/49/0d/61/490d614795d93dcdf536a34c0e2f6e78.jpg");
        //img.setAttribute("src", user.pathImgAVA);

        const div = document.createElement("div");

        const h2 = document.createElement("h2");
        h2.className = "user-name";

        h2.innerText = user.userName + ":";

        const timeDiv = document.createElement("div");

        const sentDate = document.createElement("div");
        sentDate.className = "sentTime";
        sentDate.innerText = new Date(message.timeStamp).toLocaleDateString();

        const sentTime = document.createElement("div");
        sentTime.className = "sentTime";
        sentTime.innerText = new Date(message.timeStamp).toLocaleTimeString();


        const p = document.createElement("p");
        p.className = "message";

        p.innerText = message.text;


        const userId = document.getElementById("currentUserId");
        if (userId.value == user.id) {
            $(userIcon).addClass("right");
            $(p).addClass("my-message");
            h2.innerText = "Ви:"
        }


        div.appendChild(h2);

        timeDiv.appendChild(sentDate);
        timeDiv.appendChild(sentTime);

        userIcon.appendChild(img);
        userIcon.appendChild(div);
        userIcon.appendChild(timeDiv);

        userMessage.appendChild(userIcon);
        userMessage.appendChild(p);

        messagesDiv.appendChild(userMessage);


        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }


    async function GetMessageCount() {


        const chatType = document.getElementById("chatType");
        const currentChatId = document.getElementById("currentChatId");

        const response = await fetch(`/Chat/GetAllMessages?chatType=${chatType.value}&chatId=${currentChatId.value}`, {
            method: "GET",
            headers: { "Accept": "application/json", "Content-Type": "application/json" }
        });

        if (response.ok) {
            const result = await response.json();

            console.log(result);

            const messages = document.querySelectorAll(".user-message");
            const list = result.list;
            const users = result.users;

            if (messages.length < list.length) {

                const children = document.querySelectorAll(".user-message");

                children.forEach(child => {

                    child.remove();
                });



                UpdateAllMessages(list, users);
            }
        }
    }


    function UpdateAllMessages(messages, users) {
        messages.forEach(message => {

            users.forEach(user => {

                if (user.id === message.userId) {
                    AddNewMessageBlock(message, user);
                }
            });
        });
    }

    const getMessageTimer = setInterval(GetMessageCount, 3000);


</script>




